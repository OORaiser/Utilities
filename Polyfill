//bind
if (!Function.prototype.bind) {
    Function.prototype.bind = function(obj) {
        var slice = Array.prototype.slice,
        	args = slice.call(arguments, 1),
            nop = function () {},
            bound = (function(self) {
                return function () {
                	return self.apply(this instanceof nop ? this : (obj || {}),
                		args.concat(slice.call(arguments)))
                }
            })(this);
            
        nop.prototype = this.prototype;
        bound.prototype = new nop();
        
        return bound;
    }
}
